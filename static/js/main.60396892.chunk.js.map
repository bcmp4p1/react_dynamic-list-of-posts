{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/users.ts","App.tsx","index.tsx"],"names":["BASE_URL","getUserPosts","userId","a","fetch","response","json","getPosts","getPostById","id","String","PostsList","onChoose","useState","posts","setPosts","selectedPostId","setSelectedPostId","loadPosts","userPosts","useEffect","className","length","map","post","title","type","classNames","onClick","postId","getComments","deleteComment","commentId","method","addComment","name","email","body","headers","JSON","stringify","NewCommentForm","handleAddComment","commentName","setCommentName","commentEmail","setCommentEmail","commentBody","setCommentBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","required","PostDetails","setPost","postComments","setPostComments","isHiden","setIsHiden","loadPost","postFromServer","loadComments","postIdForComments","postCommentsFromServer","handleDeleteComment","comment","getUsers","App","users","setUsers","setUserId","setPostId","loadUsers","usersFromServer","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60396892.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async (userId: number) => {\n  const response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  return response.json();\n};\n\nexport const getPosts = async () => {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  return response.json();\n};\n\nexport const getPostById = async (id: number) => {\n  const response = await fetch(`${BASE_URL}/posts/${String(id)}`);\n\n  return response.json();\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getPosts, getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\ntype Props = {\n  userId: number,\n  onChoose: (id: number) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({ userId, onChoose }) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const loadPosts = async () => {\n    let userPosts;\n\n    if (userId === 0) {\n      userPosts = await getPosts();\n    } else {\n      userPosts = await getUserPosts(userId);\n    }\n\n    setPosts(userPosts);\n  };\n\n  const handleClickButton = (postId: number) => {\n    if (postId !== selectedPostId) {\n      onChoose(postId);\n      setSelectedPostId(postId);\n    } else {\n      onChoose(0);\n      setSelectedPostId(0);\n    }\n  };\n\n  useEffect(() => {\n    loadPosts();\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      {posts.length > 0 ? (\n        <ul className=\"PostsList__list\">\n          {posts.map(post => (\n            <li\n              className=\"PostsList__item\"\n              key={post.id}\n            >\n              <div>\n                <b>{`[User #${post.userId}]: `}</b>\n                {post.title}\n              </div>\n              <button\n                type=\"button\"\n                className={classNames(\n                  'PostsList__button',\n                  'button',\n                  { 'PostsList__button--selected': post.id === selectedPostId },\n                )}\n                onClick={() => handleClickButton(post.id)}\n              >\n                {post.id === selectedPostId ? (\n                  'Close'\n                ) : (\n                  'Open'\n                )}\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No posts</p>\n      )}\n\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport const getComments = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return response.json();\n};\n\nexport const deleteComment = (commentId: number) => {\n  return fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const addComment = async (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n): Promise<PostComment[]> => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  handleAddComment: (\n    name: string,\n    email: string,\n    body: string,\n  ) => Promise<void>,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  handleAddComment,\n}) => {\n  const [commentName, setCommentName] = useState('');\n  const [commentEmail, setCommentEmail] = useState('');\n  const [commentBody, setCommentBody] = useState('');\n\n  const changeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCommentName(event.target.value);\n  };\n\n  const changeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCommentEmail(event.target.value);\n  };\n\n  const changeBody = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setCommentBody(event.target.value);\n  };\n\n  const clearForm = () => {\n    setCommentName('');\n    setCommentEmail('');\n    setCommentBody('');\n  };\n\n  const handlerSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    handleAddComment(commentName, commentEmail, commentBody);\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handlerSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={commentName}\n          onChange={changeName}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={commentEmail}\n          onChange={changeEmail}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={commentBody}\n          onChange={changeBody}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { addComment, deleteComment, getComments } from '../../api/comments';\nimport { getPostById } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number,\n};\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [postComments, setPostComments] = useState<PostComment[] | null>(null);\n  const [isHiden, setIsHiden] = useState(false);\n\n  const loadPost = async (id: number) => {\n    const postFromServer = await getPostById(id);\n\n    setPost(postFromServer);\n  };\n\n  const loadComments = async (postIdForComments: number) => {\n    const postCommentsFromServer = await getComments(postIdForComments);\n\n    setPostComments(postCommentsFromServer);\n  };\n\n  const handleHideComments = () => {\n    setIsHiden(!isHiden);\n  };\n\n  const handleDeleteComment = async (commentId: number) => {\n    await deleteComment(commentId);\n    await loadComments(postId);\n  };\n\n  const handleAddComment = async (\n    name: string,\n    email: string,\n    body: string,\n  ) => {\n    await addComment(\n      postId,\n      name,\n      email,\n      body,\n    );\n\n    await loadComments(postId);\n  };\n\n  useEffect(() => {\n    loadPost(postId);\n    loadComments(postId);\n  }, [postId]);\n\n  return (\n    post && (\n      <div className=\"PostDetails\">\n        <h2>Post details:</h2>\n\n        <section className=\"PostDetails__post\">\n          <p>{post.title}</p>\n        </section>\n\n        <section className=\"PostDetails__comments\">\n\n          {postComments && postComments.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"button PostDetails__button-hide\"\n              onClick={handleHideComments}\n            >\n              {isHiden ? (\n                'Show comments'\n              ) : (\n                `Hide ${postComments.length} comments`\n              )}\n            </button>\n          )}\n\n          {!isHiden && (\n            postComments && postComments.length > 0 ? (\n              <ul className=\"PostDetails__list\">\n                {postComments.map(comment => (\n                  <li\n                    className=\"PostDetails__list-item\"\n                    key={comment.id}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => handleDeleteComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n\n            ) : (\n              <p>No comments</p>\n            )\n          )}\n\n        </section>\n\n        <section>\n          <div className=\"PostDetails__form-wrapper\">\n            <NewCommentForm\n              handleAddComment={handleAddComment}\n            />\n          </div>\n        </section>\n      </div>\n    )\n  );\n};\n","import { BASE_URL } from './api';\n\nexport const getUsers = async () => {\n  const response = await fetch(`${BASE_URL}/users`);\n\n  return response.json();\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/users';\n\ntype Props = {};\n\nconst App: React.FC<Props> = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [userId, setUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n\n  const loadUsers = async () => {\n    const usersFromServer = await getUsers();\n\n    setUsers(usersFromServer);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n  };\n\n  const handleChoosePost = (id: number) => {\n    setPostId(id);\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={handleSelect}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            onChoose={handleChoosePost}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postId !== 0 && (\n            <PostDetails postId={postId} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}